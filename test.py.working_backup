#!/usr/bin/python 

class PlayerCharacter(object):

#    def __init__(self):
#        self.name = raw_input("Name: ")
    def __init__(self, name):
        self.name = name
        self.ac = raw_input("AC: ")
        self.hp = raw_input("HP: ")
        self.initiative = raw_input("Initiative Roll: ")

class NonPlayerCharacter(object):

    def __init__(self, name):
        self.name = name
        self.ac = raw_input("AC: ")
        self.hp = raw_input("HP: ")
        self.initiative = raw_input("Initiative Roll: ")

def player_setup ():

    # create list of player character's names depending on number user enters

    num_pc = raw_input("How many Player Characters are there? (ex. 1, 2, 3...): ")
    pc_list = []
    count = int(num_pc)
    while count > 0:
        pc_list.append(raw_input("PC Name: "))
        count -= 1

    # create PlayerCharacter object for each name in the list generated above

    for n in range(0,int(num_pc)):
        print "Creating PlayerCharacter object for: %s" % pc_list[n]
        pc_list[n] = PlayerCharacter(pc_list[n])

    # create dictionary to store ongoing health totals for each player character

    pc_hp_tracker = {}
    for n in range(0,int(num_pc)):
        player = pc_list[n].name
        pc_hp_tracker[player] = pc_list[n].hp


def npc_setup():

    # create list of npc names depending on number user enters

    num_npc = raw_input("How many Non-Player Characters are there? (ex. 1, 2, 3...): ")
    npc_list = []
    count = int(num_npc)
    while count > 0:
        npc_list.append(raw_input("NPC Name: "))
        count -= 1

    # create NPC object for each name in the list generated above

    for n in range(0,int(num_npc)):
        print "Creating NPC object for: %s" % npc_list[n]
        npc_list[n] = NonPlayerCharacter(npc_list[n])

    # create dictionary to store ongoing health totals for each npc

    npc_hp_tracker = {}
    for n in range(0,int(num_npc)):
        npc = npc_list[n].name
        npc_hp_tracker[npc] = npc_list[n].hp

player_setup()
npc_setup()

print pc_hp_tracker
print npc_hp_tracker
